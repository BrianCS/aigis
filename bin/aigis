#!/usr/bin/env node
var beauty = require('beauty');
beauty.beautifyConsole();
beauty.setTheme({
  'log': ['blue'],
  'info': ['cyan', 'bold'],
  'warn': ['yellow','italic'],
  'error': ['red','bold','underline']
});

var argv = require('yargs')
  .demand(1, 'Usage: aigis run -c ./path/to/aigis_config.yml')
  .command('run', 'Generate styleguide', {
    'c': {
      alias: 'config',
      describe: 'Path to config file',
      default: './aigis_config.yml'
    }
  }, run)
  .help()
  .example('$0 run -c ./config_file.yml')
  .command('init', 'Copy template & theme & config file', {
    'e': {
      alias: 'engine',
      describe: 'choose template engine [ejs, jade, hbs]',
      default: 'ejs'
    }
  }, init)
  .help()
  .example('$0 init -e jade')
  .alias('v', 'version')
  .version(function() { return require('../package').version; })
  .describe('v', 'show version information')
  .alias('h', 'help')
  .usage('Usage: aigis run -c ./path/to/aigis_config.yml')
  .showHelpOnFail(false, 'Specify --help for available options')
  .detectLocale(false)
  .help('help')
  .argv;

function run(argv) {
  var Aigis = require('../index');
  var aigis;

  try {
    aigis = new Aigis(argv.config);
    aigis.run();
  }
  catch(e) {
    console.error(e.message);
    process.exit(1);
  }
}

function init(argv) {
  var path = require('path');
  var fs = require('fs-extra');
  var cwd = path.resolve();
  var exampleDir = path.join(__dirname, '../examples');

  var assets = [
    {
      dest: 'aigis_config.yml',
      src: 'default_config.yml'
    },
    {
      src: 'aigis_assets',
      dest: 'aigis_assets'
    },
    {
      src: 'template_' + argv.engine,
      dest: 'template_' + argv.engine
    }
  ];

  console.log('Created the following files and directories:');
  assets.forEach(function(asset) {
    var src = asset.src, dest = asset.dest;
    var _path = path.join(exampleDir, src);
    var _dest = path.join(cwd, dest);

    switch(src) {
      case 'default_config.yml':
        var file = fs.readFileSync(_path, 'utf-8');
        file += 'template_dir: ./template_' + argv.engine + '\n';
        file += 'template_engine: ' + argv.engine + '\n';

        try {
          var config = fs.readFileSync(_dest);
          console.warn('Cowardly refusing to overwrite existing: aigis_config.yml');
        }
        catch (err) {
          console.log(' ', path.relative(cwd, _dest));
          fs.outputFileSync(_dest, file);
        }
        break;
      default:
        console.log(' ', path.relative(cwd, _dest));
        fs.copySync(_path, _dest, {
          filter: function(file) {
            console.log(' ', path.relative(exampleDir, file));
            return true;
          }
        });
    }
  });
}
